 Creación de repositorio para la práctica

1. Con el navegador, dirígete al repositorio ptavi-p5 en la cuenta del profesor en GitHub1 y realiza un fork, de manera que consigas tener una copia del repositorio en tu cuenta de GitHub. Clona el repositorio que acabas de crear a local para poder editar los archivos. Trabaja a partir de ahora en ese repositorio, sincronizando los cambios que vayas realizando.

Como tarde al final de la práctica, deberás realizar un push para subir tus cambios a tu repositorio en GitHub. En esta práctica, al contrario que con las demás, se recomienda hacer frecuentes commits, pero el push al final.

================================================================================
================================================================================

Análisis de una sesión SIP

Se ha capturado una sesión SIP (archivo sip.cap.gz), que se puede abrir con Wireshark2. Se pide rellenar las cuestiones que se plantean en este guión en el fichero p5.txt que encontrarás también en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes cuestiones:
 ** ¿Cuántos paquetes componen la captura?
    La captura se compone de 954 paquetes.

 ** ¿Cuánto tiempo dura la captura?
    56.149345 segundos.

** ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se trata de una IP pública o de una IP privada? ¿Por qué lo sabes?
    192.168.1.34. Es una IP privada, porque tiene una dirección del tipo 192.168.x.x

3. Antes de analizar las tramas, mira las estadísticas generales que aparecen en el menú de Statistics. En el apartado de jerarquía de protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico correspondiente al protocolo TCP y UDP.
 ** ¿Cuál de los dos es mayor? ¿Es esto consistente con una aplicación que transmite en tiempo real?
    El tráfico UDP es bastante mayor que el de TCP. 96.2% vs 2.1%. Tiene sentido que sea de esta manera, ya que todo lo relacionado con la petición que se hace a un servidor de internet y el DNS se hace por
    TCP mientras que los protocolos de intercambio multimedia utilizan UDP. 

 ** ¿Qué otros protocolos podemos ver en la jerarquía de protocolos?
    Simple Transversal of UDP Through NAT, SIP/SDP, RTP, RTCP, ICMP, ARP, IPV4, Ethernet.
    ¿Cuáles son señales interesantes y cuáles son ruido?
    Las señales interesantes serán las relacionadas con VoIP (DNS, STUN, SDP, SIP, RTP, RTCP). Hay paquetes de TCP/IP que seguramente no tengan que ver con la llamada.


4. Observa por encima el flujo de tramas en el menú de Statistics en IO Graphs. La captura que estamos viendo incluye desde la inicialización (registro) de la aplicación hasta su finalización, con una llamada entremedias.
 ** Filtra por sip para conocer cuándo se envían paquetes SIP. ¿En qué segundos tienen lugar esos envíos?
    Los paquetes SIP empiezan en el segundo 7 con 6 paquetes, 14, 16, 38, 39 y termina aproximadamente en el segundo 55.    

 ** Y los paquetes con RTP, ¿cuándo se envían?
    Los paquetes RTP empiezan en el segundo 17 hasta el 22, donde hay un silencio, para luego reanudarse en el segundo 23 y terminar en el 38.



[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

5. Analiza las primeras cuatro tramas de la captura nada más arrancar Ekiga.
• ¿Qué servicio es el utilizado en estas tramas?
    Ekiga.net
    

• ¿Cuál es la dirección IP del servidor de nombres del ordenador
que ha lanzado Ekiga?
    El servidor REGISTRAR de nombres de Ekiga es el 86.64.162.35    

• ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nom-
bres?
    El nombre que se devuelve es 500@ekiga.net
    La IP que se devuelve es 86.64.162.35, eso significa que estamos hablando con un bot.


6. A continuación, hay más de una docena de tramas TCP/HTTP.
• ¿Podrı́as decir la URL que se está pidiendo?
    http://ekiga.net/ip/

• ¿Qué user agent (UA) la está pidiendo?
    Ekiga

• ¿Qué devuelve el servidor?
    Devuelve un 200 OK, con la dirección que se le ha pedido. 83.36.48.212

• Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo que está respondiendo el servidor?
    Recibimos una dirección IP. Nos está devolviendo nuestra IP pública. 212.128.255.3


7. Hasta la trama 45 se puede observar una secuencia de tramas del protocolo STUN.
• ¿Por qué se hace uso de este protocolo?
    Este protocolo se usa para poder realizar un intercambio de paquetes UDP a través de dispositivos NAT. Nos permite saber nuestra IP pública, tipo de NAT y puerto.

• ¿Podrı́as decir si estamos tras un NAT?
    Sí, a primera vista estamos en un NAT porque usamos protocolo STUN.


8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es desconocer la dirección IP de la otra parte al realizar una llamada. Por eso, todo usuario registra su localización en un servidor Registrar. El Registrar guarda información sobre los usuarios en un servidor de localización que puede ser utilizado para localizar usuarios.
• ¿Qué dirección IP tiene el servidor Registrar?
    Dst: 86.64.162.35

• ¿A qué puerto (del servidor Registrar) se envı́an los paquetes
SIP?
    Por defecto, es el 5060.


• ¿Qué método SIP utiliza el UA para registrarse?
    REGISTER.


• Además de REGISTER, ¿podrı́as decir qué instrucciones SIP entiende el UA?
    INVITE,ACK,OPTIONS,BYE,CANCEL,NOTIFY,REFER,MESSAGE


9. Fijémonos en las tramas siguientes a la número 46:
• ¿Se registra con éxito en el primer intento?
    No, el servidor envía de hecho un SIP/2.0 401 Unauthorized.


• ¿Cómo sabemos si el registro se ha realizado correctamente o no?
    Cuando el servidor REGISTRAR nos envíe un 200 OK que responde a nuestro REGISTER.


• ¿Podrı́as identificar las diferencias entre el primer intento y el segundo de registro? (fíjate en el tamaño de los paquetes y mira a qué se debe el cambio).
    El segundo mensaje que enviamos REGISTER contiene un campo Authorization con nonce="45a439ee7438aaea43ae8c7c2382922187f86c8b" response="5267d4e49d707d4443baefa913e8ff90"
    Esto se refiere a un protocolo de seguridad de autenticación.


• ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica las unidades.
    Expires:3600 segundos.



10. Una vez registrados, podemos efectuar una llamada. Vamos a probar con el servicio de eco de Ekiga que nos permite comprobar si nos hemos conectado correctamente. El servicio de eco tiene la dirección
sip:500@ekiga.net. Veamos el INVITE de cerca.

• ¿Puede verse el nombre del que efectúa la llamada, ası́ como su dirección SIP?
    Sí, podemos verlo en el campo FROM: "Gregorio Robles" <sip:grex@ekiga.net>;tag=621be956-b29e-db11-82ee-0013ce8c7c2b


• ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué for mato/protocolo está?
    En el cuerpo de la trama podemos observar protocolo SDP, que definirá cómo es la sesión.


• ¿Tiene éxito el primer intento? ¿Cómo lo sabes?
    No, el primer intento es infructuoso. Un servidor proxy nos envía un 407 proxy authentication required


• ¿En qué se diferencia el segundo INVITE más abajo del primero? ¿A qué crees que se debe esto?
    El segundo invite tendrá por lo menos un campo nuevo adicional, el nonce que le envió el proxy y su respuesta.
    Esto es un mecanismo de autenticación de identidad.



11. Una vez conectado, estudia el intercambio de tramas.

• ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protoco-
los?
    Se utilizan los protocolos h.261 y RTP/

• ¿Cuál es el tamaño de paquete de los mismos?
    El tamaño de los paquetes es de 214 bytes para RTP. Para h.261 es 1028 y 1073.

• ¿Se utilizan bits de padding?
    No, no se utilizan, se puede ver en el campo Padding = False.

• ¿Cuál es la periodicidad de los paquetes que se envı́an?
    Según el campo Timestamp, 120 (milisegundos?)

• ¿Cuántos bits/segundo estamos enviando?

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]



12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una
opción RTP. Empecemos mirando los flujos RTP.

• ¿Cuántos flujos hay? ¿por qué?
    Hay dos flujos. Uno de video y otro de audio. Sólo de ida.

• ¿Cuántos paquetes se pierden?
    Ningún paquete, 0%

• ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el
valor de delta?
    Delta máximo para un flujo es 1290.479
    Para el otro es de 1290.444
    Por el momento, no sé lo que significa el delta.

• ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué
quiere decir eso? ¿Estamos ante una conversación de calidad?
    El jitter medio es de 153.24 milisegundos. El jitter máximo es de 183.10 ms.
    Quiere decir que el retardo tiene una variación media de ese valor y que como máximo la varianza del retarde fue el otro valor.
    Un jitter de más de 150 ms es considerado como demasiado alto, así que esta llamada está al límite de ser considerada de calidad.


13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony
-> RTP -> Stream Analysis.

• ¿Cuánto valen el delta y el jitter para el primer paquete que
ha llegado?
    Valen 0, porque todavía no se ha comparado con ningún otro paquete al ser este el primero.

• ¿Podemos saber si éste es el primer paquete que nos han enviado?
    Podemos saber si este paquete es el primero por las razones comentadas arriba.    

• Los valores de jitter son menores de 10ms hasta un paquete
dado. ¿Cuál?
    Paquete 247.

• ¿A qué se debe el cambio tan brusco del jitter?
    A un delta muy elevado.

• ¿Es comparable este cambio con el tiempo desde la recepción del
paquete anterior? ¿Por qué?
    Sí. Si observamos los tiempos en los que llegaron el paquete 246 y el 247, hay un salto bastante grande de tiempo.

• ¿Cuál es la dependencia entre el tiempo transcurrido desde el
paquete anterior y el valor de jitter?
    El delta es la diferencia de tiempo que hubo entre el paquete 246 y 247, casi medio segundo. Cuanto más grande el valor de delta,
    más grande puede ser el jitter.




14. En Telephony selecciona el menú VoIP calls. Verás que se lista la
llamada de voz IP capturada en una ventana emergente. Selecciona
esa llamada y pulsa el botón Graph.

• ¿Cuánto dura la conversación?
    Aproximadamente 25 segundos.

• ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?
    No sé contestar a esta pregunta. Los ssrc tiene que ver con sincronización.


15. Identifica la trama donde se finaliza la conversación.

• ¿Qué método SIP se utiliza?
    Se utiliza el método BYE.

• ¿En qué trama(s)?
    paquete 924.

• ¿Por qué crees que se envı́a varias veces?
    Puede ser que se esperase una respuesta que no llegó a tiempo. Después de un tiempo, el servidor responde 3 veces OK.



16. Finalmente, se cierra la aplicación de VozIP.

• ¿Por qué aparece una instrucción SIP del tipo REGISTER?
    Se ha enviado un REGISTER con expires = 0, el usuario se ha dado de baja.

• ¿En qué trama sucede esto?
    paquete 950.

• ¿En qué se diferencia con la instrucción que se utilizó con anteri-
oridad (al principio de la sesión)?
    Se diferencia en el valor de expires, en este caso es 0.


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

17. Dirı́gete a la web http://www.ekiga.net con el navegador y créate una cuenta. Lanza Ekiga, y configúralo con los datos de la cuenta
que te acabas de crear. Comprueba que estás conectado (En la barra al final de la ventana podrás ver “Connected”). Al terminar, cierra
completamente Ekiga.

18. Captura una sesión SIP de una conversación con el número SIP sip:9999@qxip.net. Recuerda que has de comenzar a capturar tramas antes de arrancar 
Ekiga para ver todo el proceso.

19. Observa las diferencias en el inicio de la conversación entre el entorno del laboratorio y el del ejercicio anterior 3 :
• ¿Es necesario el uso de DNS y STUN? ¿Por qué? Sí, se ha usado CLASSIC-STUN y DNS. STUN se utiliza para poder atravesar NAT y el DNS lo necesitamos para saber la dirección de ekiga.net.
• ¿Son diferentes el registro y la descripción de la sesión? Sí, son distintos. La descripción de la sesión aparte de llevar información SIP, lleva SDP.

20. Identifica las diferencias existentes entre esta conversación y la con versación anterior:
• ¿Cuántos flujos tenemos?
    Tenemos 4 flujos de RTP. Dos para un lado de la llamada y otros dos para el otro lado de la llamada (audio y video).

• ¿Cuál es su periodicidad?
    TimeStamp = 160
    Tiempo entre paquetes: 0.015

• ¿Cuánto es el valor máximo del delta y los valores medios y
máximo del jitter?
    Max Delta = 54.22ms
    Max jitter = 7.61ms
    Mean jitter = 3.80ms

• ¿Podrı́as reproducir la conversación desde Wireshark? ¿Cómo?
    Se puede hacer desde el menú telephony y play stream.

Comprueba que poniendo un valor demasiado pequeño para el buffer de jitter, la conversación puede no tener la calidad necesaria.
    En este caso la conexión parece buena, con un jitter buffer de 5, la llamada funciona, pero con un jitter buffer de 0 la llamada se corta cada poco tiempo.

• ¿Sabrı́as decir qué tipo de servicio ofrece sip:9999@qxip.net?
    No se sabe, el contacto no está disponible para llamada. En su lugar, he llamado al servicio de eco (te devuelve con el retardo que haya lo que acabas de decir).
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

Si estás utilizando tu portátil en vez de una máquina del laboratorio, ten en cuenta
que la captura puede ser diferente, porque con el portátil estarás conectado a la red wifi,
mientras que los ordenadores de los laboratorios lo están a una LAN.

21. Filtra por los paquetes SIP de la captura y guarda únicamente los paquetes SIP como p5.pcapng. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás guardarlo en un archivo de
nombre p5.pcapng y añadirlo al repositorio.
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]
[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]
